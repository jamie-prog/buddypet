{% comment %}
** Header 1 Classic - static **
- Static section
{% endcomment %}

{% assign id = section.id %}
{% assign logo = section.settings.logo %}
{% assign overlay_logo = section.settings.overlay_logo %}
{% assign mobile_logo = section.settings.mobile_logo %}
{% comment %} Advanced {% endcomment %}
{% assign width = section.settings.width %}
{% assign css_class = section.settings.css_class %}
{% assign custom_css = section.settings.custom_css %}

{% comment %} Is the color set to transparent? {% endcomment %}
{% assign header_alpha = settings.header_background | color_extract: 'alpha' %}
{% assign overlay_alpha = section.settings.overlay_background | color_extract: 'alpha' %}
{% assign overlay_link_alpha = section.settings.overlay_link_color | color_extract: 'alpha' %}
{% assign overlay_link_hover_alpha = section.settings.overlay_link_hover_color | color_extract: 'alpha' %}

{% comment %} Opacity level {% endcomment %}
{% if header_alpha != 0 %}
  {% assign sticky_background_alpha = section.settings.sticky_background_opacity | divided_by: 100.00 %}
  {% assign overlay_background_alpha = section.settings.overlay_background_opacity | divided_by: 100.00 %}
{% endif %}

{% comment %} Section specific CSS {% endcomment %}
{% capture section_css -%}
  .header__logo,
  .logo__content {
    width: {{ section.settings.logo_width }}px;
  }

  .is-sticky .header__logo {
    width: {{ section.settings.scroll_logo_width }}px;
  }

  {%- if section.settings.enable_overlay -%}
    [data-enable_overlay="true"] .header {
      background-color: {%- if overlay_alpha != 0 -%}{{ section.settings.overlay_background | color_modify: 'alpha', overlay_background_alpha }}{%- else -%}{{ settings.header_background | color_modify: 'alpha', overlay_background_alpha }}{%- endif -%};
    }

    [data-enable_overlay="true"] .header__logo,
    .overlay-logo__content {
      width: {{ section.settings.overlay_logo_width }}px;
    }

    [data-enable_overlay="true"] .header__link,
    [data-enable_overlay="true"] .select select {
      color: {%- if overlay_link_alpha != 0 -%}{{ section.settings.overlay_link_color }}{%- endif -%};
      fill: {%- if overlay_link_alpha != 0 -%}{{ section.settings.overlay_link_color }}{%- endif -%};
      {% if section.settings.show_text_shadow %}
        text-shadow: 0 1px 1px rgba(0, 0, 0, .4);
      {% endif %}
    }

    [data-enable_overlay="true"] .header__link:hover,
    [data-enable_overlay="true"] .header__link.is-active,
    [data-enable_overlay="true"] .select select:hover {
      color: {%- if overlay_link_hover_alpha != 0 -%}{{ section.settings.overlay_link_hover_color }}{%- endif -%};
      fill: {%- if overlay_link_hover_alpha != 0 -%}{{ section.settings.overlay_link_hover_color }}{%- endif -%};
    }
  {%- endif -%}
  {%- if section.settings.enable_sticky -%}
    .header-sticky-wrapper.is-sticky .header {
      background-color: {{ settings.header_background | color_modify: 'alpha', sticky_background_alpha }};
    }

    #mobile-header-sticky-wrapper.is-sticky .mobile-header {
      background-color: {{ settings.header_background | color_modify: 'alpha', sticky_background_alpha }};
    }

    .mobile-menu--opened #mobile-header-sticky-wrapper.is-sticky .mobile-header {
      background-color: {{ settings.header_background }};
    }
  {%- endif -%}
{%- endcapture -%}

{% style %}
  #shopify-section-{{ id }} {
    padding-top: {{ padding_top }}px;
    padding-bottom: {{ padding_bottom }}px;
    {% if width == 'wide' %}
      width: 100%;
    {% endif %}
  }
  {% render 'css-loop',
          css: section_css,
          id: id
  %}
  {% render 'css-loop',
          css: custom_css,
          id: id
  %}
{% endstyle %}

{% render 'header__structured-data' %}

{% comment %} HTML markup {% endcomment %}
<div class="is-relative {{ css_class }}" data-enable_overlay="{{ section.settings.enable_overlay }}" data-enable_sticky="{{ section.settings.enable_sticky }}">
  <header id="header" class="header dropdown-style-{{ settings.dropdown_style }} box-shadow-{{ settings.show_dropdown_shadow }}">
    <section class="section
                    is-width-{{ width }}">
      <div class="container">
        <div class="header-main navbar is-align-center justify-content-between">
          <div class="header__left"> 
            <div class="main-menu">
              {% assign main_menu = linklists[section.settings.main_linklist] %}
              {% for link in main_menu.links %}
                <span class="item" index="{{ forloop.index }}">
                  <a href="{{ link.url }}">
                    <span class="placeholder">{{ link.title }}</span>
                    <span class="visible-text">{{ link.title }}</span>
                  </a>
                </span>
              {% endfor %}
            </div>
          </div>
          <div class="header__brand justify-content-center">
            {% if section.settings.enable_overlay and section.settings.overlay_logo != blank %}
              {% if template contains 'index' %}
                <h1 class="visuallyhidden">{{ shop.name }}</h1>
              {% endif %}
              <div class="overlay-logo__content">
                <a class="header__logo header__link overlay-logo" href="{{ shop.url }}" title="{{ shop.name }}">
                  {% render 'image-element',
                          image: section.settings.overlay_logo,
                          alt: section.settings.overlay_logo.alt,
                          additional_classes: 'overlay-logo',
                          back_to_basics: true
                  %}
                </a>
              </div>
              <div class="logo__content">
                {% if section.settings.logo != blank %}
                  <h1 class="visuallyhidden">{{ shop.name }}</h1>
                  <a class="header__logo header__link primary-logo" href="{{ shop.url }}" title="{{ shop.name }}">
                    {% render 'image-element',
                            image: section.settings.logo,
                            alt: section.settings.logo.alt,
                            additional_classes: 'primary-logo'
                    %}
                  </a>
                {% else %}
                  <h1 class="header__logo-text">
                    <a href="{{ shop.url }}" class="header__link primary-brand">
                      {{ shop.name }}
                    </a>
                  </h1>
                {% endif %}
              </div>
            {% elsif section.settings.logo != blank %}
              {% if template contains 'index' %}
                <h1 class="visuallyhidden">{{ shop.name }}</h1>
              {% endif %}
              <a class="header__logo header__link primary-logo" href="{{ shop.url }}" title="{{ shop.name }}">
                {% render 'image-element',
                        image: section.settings.logo,
                        alt: section.settings.logo.alt,
                        additional_classes: 'primary-logo'
                %}
              </a>
            {% else %}
              {% if template contains 'index' %}
                <h1 class="header__logo-text">
                  <a href="{{ shop.url }}" class="header__link primary-brand">
                    {{ shop.name }}
                  </a>
                </h1>
              {% else %}
                <a href="{{ shop.url }}" class="header__logo-text header__link primary-brand">
                  {{ shop.name }}
                </a>
              {% endif %}
            {% endif %}
          </div>
          <div class="header__right justify-content-end">
            <div class="right-menu">
              {% assign right_menu = linklists[section.settings.rightmenu_linklist] %}
              {% for link in right_menu.links %}
                <span class="item">
                  <a href="{{ link.url }}">
                    <span class="placeholder">{{ link.title }}</span>
                    <span class="visible-text">{{ link.title }}</span>
                  </a>
                </span>
              {% endfor %}
            </div>
            {% render 'header__action-icons',
                    display_search: false,
                    header_icon_class: false
            %}
          </div>
        </div>
          
        <div class="submenu-wrapper hidden">
          {% for link in main_menu.links %}
            {% assign main_menu_index = forloop.index %}
            {% if link.links != blank %}
              <div class="submenu hidden" index="{{ main_menu_index }}">
                {% for block in section.blocks %}
                  {% if block.type == "menu-image" and block.settings.index == main_menu_index %}
                    <div class="col col-image">
                      <a href="{{ block.settings.url }}">
                        <svg class="bkg" xmlns="http://www.w3.org/2000/svg" width="495.638" height="494.576" viewBox="0 0 495.638 494.576">
                          <path id="Oval" d="M343.362,277.812c-14.671,47.282-45.659,89.549-96.4,101.681-78.251,18.7-159.393-30.811-203.992-92.545a242.516,242.516,0,0,1-36.1-74.689c-10.3-35.4-5.54-70.617,16.234-100.843C73.406,41.556,176,9.685,257.553,33.84c34.818,10.317,63.029,35.418,79.04,67.968,10.177,20.667,15.132,42.739,17.26,65.519,2.306,24.739.947,49.4-2.43,73.946a227.375,227.375,0,0,1-8.06,36.539" transform="matrix(-0.574, 0.819, -0.819, -0.574, 517.759, 218.598)" opacity="0.696"/>
                        </svg>
                        <img src="{{ block.settings.image | img_url: 'master' }}" alt="">
                        <span class="text">{{ block.settings.text }}</span>
                      </a>
                    </div>
                  {% endif %}
                {% endfor %}
                {% if link.levels == 2 %}
                  {% for sub_link in link.links %}
                    <div class="col">
                      <span class="item label">
                        <a href="{{ sub_link.url }}">{{ sub_link.title }}</a>
                      </span>
                      {% for sub_sub_link in sub_link.links %}
                        <span class="item">
                          <a href="{{ sub_sub_link.url }}">{{ sub_sub_link.title }}</a>
                        </span>
                      {% endfor %}
                    </div>
                  {% endfor %}
                {% else %}
                  <div class="col">
                    {% for sub_link in link.links %}
                      <span class="item">
                        <a href="{{ sub_link.url }}">{{ sub_link.title }}</a>
                      </span>
                    {% endfor %}
                  </div>
                {% endif %}
              </div>
            {% endif %}
          {% endfor %}
        </div>

      </div>
    </section>
  </header>
  {% render 'mobile-header' %}

</div>

{% comment %}JavaScript{% endcomment %}
<script
  type="application/json"
  data-section-id="{{ section.id }}"
  data-section-data
>
  {
    "enable_overlay": {{ section.settings.enable_overlay | json }},
    "enable_sticky": {{ section.settings.enable_sticky | json }},
    "header_layout": {{ settings.header_layout | json }},
    "dropdown_click": false
  }
</script>
<script src="{{ 'z__jsHeader.js' | asset_url }}"></script>

{% comment %}Schema{% endcomment %}
{% schema %}

{
  "name": "Header",
  "class": "header--classic jsHeader header-section",
  "settings": [
    {
      "type": "header",
      "content": "Logo"
    },
    {
      "type": "image_picker",
      "id": "logo",
      "label": "Logo",
      "info": "600 x 200px recommended"
    },
    {
      "type": "range",
      "id": "logo_width",
      "label": "Width",
      "step": 5,
      "min": 80,
      "max": 300,
      "default": 200,
      "unit": "px"
    },
    {
      "type": "header",
      "content": "Navigation"
    },
    {
      "type": "link_list",
      "id": "main_linklist",
      "label": "Main menu",
      "default": "main-menu"
    },
    {
      "type": "link_list",
      "id": "rightmenu_linklist",
      "label": "Right Menu"
    },
    {
      "type": "link_list",
      "id": "mobilebottom_linklist",
      "label": "Mobile Menu Bottom"
    },
    {
      "type": "header",
      "content": "Icons"
    },
    {
      "type": "select",
      "id": "icon_style",
      "label": "Style",
      "options": [
        {
          "value": "icons",
          "label": "Icons only"
        },
        {
          "value": "text",
          "label": "Text only"
        },
        {
          "value": "icons_text",
          "label": "Icons and text"
        }
      ],
      "default": "icons"
    },
    {
      "type": "header",
      "content": "Overlay"
    },
    {
      "type": "paragraph",
      "content": "Header is overlaid directly on images. [Learn more](https://help.outofthesandbox.com/hc/en-us/articles/360022225073/#header-overlay)"
    },
    {
      "type": "checkbox",
      "id": "enable_overlay",
      "label": "Enable overlay"
    },
    {
      "type": "checkbox",
      "id": "show_text_shadow",
      "label": "Show text shadow",
      "default": false
    },
    {
      "type": "color",
      "id": "overlay_link_color",
      "label": "Links",
      "default": "rgba(0,0,0,0)"
    },
    {
      "type": "color",
      "id": "overlay_link_hover_color",
      "label": "Links hover",
      "default": "rgba(0,0,0,0)"
    },
    {
      "type": "color",
      "id": "overlay_background",
      "label": "Background",
      "default": "rgba(0,0,0,0)"
    },
    {
      "type": "range",
      "id": "overlay_background_opacity",
      "label": "Background opacity",
      "min": 0,
      "max": 80,
      "step": 10,
      "default": 0,
      "unit": "%"
    },
    {
      "type": "image_picker",
      "id": "overlay_logo",
      "label": "Overlay logo",
      "info": "600 x 200px recommended"
    },
    {
      "type": "range",
      "id": "overlay_logo_width",
      "label": "Overlay logo width",
      "step": 5,
      "min": 30,
      "max": 300,
      "default": 80,
      "unit": "px"
    },
    {
      "type": "header",
      "content": "Sticky header"
    },
    {
      "type": "checkbox",
      "id": "enable_sticky",
      "label": "Enable sticky on scroll"
    },
    {
      "type": "range",
      "id": "sticky_background_opacity",
      "label": "Background opacity",
      "min": 10,
      "max": 100,
      "step": 10,
      "default": 50,
      "unit": "%"
    },
    {
      "type": "range",
      "id": "scroll_logo_width",
      "label": "Logo width",
      "step": 5,
      "min": 30,
      "max": 300,
      "default": 80,
      "unit": "px"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "select",
      "id": "width",
      "label": "Width",
      "default": "standard",
      "options": [
        {
          "value": "standard",
          "label": "Standard"
        },
        {
          "value": "wide",
          "label": "Wide"
        }
      ]
    },
    {
      "type": "select",
      "id": "vertical_alignment",
      "label": "Vertical alignment",
      "default": "center",
      "options": [
        {
          "value": "top",
          "label": "Top"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "bottom",
          "label": "Bottom"
        }
      ]
    },
    {
      "type": "header",
      "content": "Advanced"
    },
    {
      "type": "paragraph",
      "content": "[Learn more](https://help.outofthesandbox.com/hc/en-us/articles/360022329373)"
    },
    {
      "type": "text",
      "id": "css_class",
      "label": "CSS Class"
    },
    {
      "type": "textarea",
      "id": "custom_css",
      "label": "Custom CSS"
    }
  ],
  "blocks": [
    {
      "type": "menu-image",
      "name": "Menu Image",
      "settings": [
        {
          "type": "text",   
          "id": "title",
          "label": "Block Name",
          "default": "Menu Image"
        },
        {
          "type": "header",
          "content": "Content"
        },
        {
          "type": "number",   
          "id": "index",
          "label": "Item Menu Index"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "text",
          "id": "text",
          "label": "Text"
        },
        {
          "type": "url",
          "id": "url",
          "label": "URL"
        }
      ]
    }
  ]
}

{% endschema %}
